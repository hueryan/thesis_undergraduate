查找→基本概念→静态查找表
查找→基本概念→动态查找表
查找→基本概念→关键字
查找→线性结构→顺序查找
查找→线性结构→折半查找
查找→线性结构→分块查找
查找→树形结构→二叉搜索树→基本方法
查找→树形结构→二叉搜索树→目的
查找→树形结构→二叉搜索树→查找→递归
查找→树形结构→二叉搜索树→查找→非递归
查找→树形结构→二叉搜索树→操作→插入→递归
查找→树形结构→二叉搜索树→操作→插入→非递归
查找→树形结构→二叉搜索树→操作→删除→叶子
查找→树形结构→二叉搜索树→操作→删除→内部结点，只有左孩子或右孩子
查找→树形结构→二叉搜索树→操作→删除→内部结点，有两个孩子
查找→树形结构→二叉搜索树→性能分析→解决了二叉树查找效率较低
查找→树形结构→二叉搜索树→性能分析→时间复杂度介于O(logn)和O(n)之间
查找→树形结构→二叉搜索树→左右子树的高度差要尽可能小
查找→树形结构→二叉搜索树→结点的平衡因子，左子树的高度减右子树的高度差
查找→树形结构→二叉平衡树→查找→递归
查找→树形结构→二叉平衡树→查找→非递归
查找→树形结构→二叉平衡树→操作→插入→递归
查找→树形结构→二叉平衡树→操作→插入→非递归
查找→树形结构→二叉平衡树→操作→不平衡的调整需要进行平衡调整
查找→树形结构→二叉平衡树→调整→LL型
查找→树形结构→二叉平衡树→调整→RR型
查找→树形结构→二叉平衡树→调整→LR型
查找→树形结构→二叉平衡树→调整→RL型
查找→树形结构→二叉平衡树→性能→含有n个结点的平衡二叉树的最小结点数
查找→树形结构→二叉平衡树→性能→Nh=N(h-1)+N(h-2)+1
查找→树形结构→二叉平衡树→性能→Nh=1.44h^2
查找→树形结构→最大堆，最小堆→每个结点都不小于/大于其孩子结点的树
查找→树形结构→最大堆，最小堆→插入→如果孩子结点大于父结点，交换
查找→树形结构→最大堆，最小堆→操作→删除→最后一个结点替换第一个结点，交换
查找→树形结构→最大堆，最小堆→操作→删除→第二个孩子大于较小的孩子，交换
查找→树形结构→最大堆，最小堆→性能→O(logn)
查找→树形结构→最大堆，最小堆→性能→重复插入n次
查找→树形结构→最大堆，最小堆→性能→O(nlogn)
查找→树形结构→2-3树→结点可以有一个元素或两个元素
查找→树形结构→2-3树→进行平衡
查找→树形结构→B+树→平衡多路查找树
查找→树形结构→B+树→查找→所有叶子节点都在同一层，根节点到叶子节点的路径长度相同
查找→树形结构→B+树→操作→插入→从根节点开始，一直查找到一个分支节点，直到找到叶子节点
查找→树形结构→B+树→操作→删除→遍历每一个叶子节点之后删除第二个节点
查找→树形结构→红黑树→节点是红色或黑色
查找→树形结构→红黑树→颜色属性→根节点是黑色
查找→树形结构→红黑树→颜色属性→所有叶子节点是黑色（叶子是NIL节点）
查找→树形结构→红黑树→颜色属性→每个红色节点必须有两个黑色的子节点
查找→树形结构→红黑树→颜色属性→从任一节点到其每个叶子的所有简单路径都包含相同数目的黑色节点
查找→树形结构→红黑树→有序性和平衡性
查找→树形结构→红黑树→红黑树的插入是在插入节点后进行的
查找→树形结构→红黑树→红黑树的插入节点可能导致红黑树的性质被破坏
查找→树形结构→红黑树→红黑树的插入操作